services: 
  postgres: 
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: 'pony'
      POSTGRES_PASSWORD: 'x'
    expose:
      - "5432"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL",  "pg_isready -U postgres"]  
      interval: 5s
      timeout: 5s
      retries: 10
  redis:
    image: redis:latest
    restart: always
    expose: 
      - "6379"
    ports:
      - "6379:6379"

  rabbit:
    image: rabbitmq:latest
    restart: always
    expose:
      - "5672"
    ports:
      - "5672:5672"
  celery:
    build:
      context: .
      dockerfile: Dockerfile_celery
    environment:
      BROKER_URL: "pyamqp://rabbit/"
      RESULT_URL: "redis://redis/"
      API_WORKERS: 1
      API_PORT: 80
      DB: "pony"
      DB_USER: "postgres"
      DB_PASS: "x"
      DB_PORT: "5432"
      DB_HOST: "postgres"

  api:
    build: 
      context: .
      dockerfile: Dockerfile_api
    environment: 
      #Костыли -- они такие костыли)
      BROKER_URL: "pyamqp://rabbit/"
      RESULT_URL: "redis://redis/"
      API_WORKERS: 1
      API_PORT: 80
      DB: "pony"
      DB_USER: "postgres"
      DB_PASS: "x"
      DB_PORT: "5432"
      DB_HOST: "postgres"
    depends_on:
      postgres:
        condition: service_healthy 
      redis:
        condition: service_started
      rabbit:
        condition: service_started
    ports:
      - "80:80"
